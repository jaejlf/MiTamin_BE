buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //querydsl
}

group = 'great.job'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExt
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //database
    implementation 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'

    //asciidoc
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    //Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    //jjwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //fcm
    implementation 'com.google.firebase:firebase-admin:7.1.0'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
}

//querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
    attributes \
        'build-gradle': file('build.gradle'),
            'doctype': 'book',
            'source-highlighter': 'highlightjs',
            'toc': 'left',
            'toclevels': 2,
            'icons': 'font',
            'stylesheet': 'asciidoctor.css'
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'BOOT-INF/classes/static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

build {
    dependsOn copyDocument
}

tasks.named('test') {
    useJUnitPlatform()
}